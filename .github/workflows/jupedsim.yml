name: jupedsim

on: 
  push:            # run on push events
    paths-ignore:  # but ignore everything in the docs subfolder 
      - 'docs/**'
    branches:
      - '**'
    tags:
      - '*'
  pull_request:    # run on pull requests
    paths-ignore:  # but ignore everything in the docs subfolder 
      - 'docs/**'
  schedule:
    - cron:  '5 0 * * *'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Cloning jpscore
      uses: actions/checkout@v2
      with:
        repository: jupedsim/jpscore
        ref: SUMO-Integration
        path: jpscore

    - name: Preparing Build System
      run: |
        sudo apt-get update
        sudo apt-get install cmake libeigen3-dev libxerces-c-dev libfox-1.6-dev libgdal-dev libproj-dev
        sudo apt-get install wget unzip ninja-build clang clang-format-14 libglm-dev qtbase5-dev libvtk9-dev libvtk9-qt-dev libopengl-dev

    - name: Building jpscore dependencies
      run: jpscore/scripts/setup-deps.sh --install-path ./jpscore-deps

    - name: Building jpscore
      run: |
        mkdir jpscore-build jpscore-install
        cd jpscore-build
        cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH=$PWD/../jpscore-deps -DCMAKE_INSTALL_PREFIX=$PWD/../jpscore-install -DBUILD_JPSVIS=OFF ../jpscore
        cmake --build .
        cmake --install .

    - name: Cloning SUMO
      uses: actions/checkout@v2
      with:
        path: sumo
        fetch-depth: 0
 
    - name: Fetching SUMO tags
      run: |
        cd sumo
        git fetch --tags --force

    - name: ccache
      if: github.event_name != 'schedule'
      uses: hendrikmuhs/ccache-action@v1.2.2

    - name: Configuring and building SUMO
      run: |
        mkdir -p sumo/cmake-build 
        cd sumo/cmake-build 
        cmake -DJUPEDSIM_DIR=$PWD/../../jpscore-install ..
        make -j4
        sudo make install

    - name: Building Examples and Tests
      run: |
        cd sumo/cmake-build
        make CTEST_OUTPUT_ON_FAILURE=1 examples test
