if(SWIG_FOUND)
    include(${SWIG_USE_FILE})
    set(CMAKE_SWIG_FLAGS "")
    set_source_files_properties(libsumo.i PROPERTIES CPLUSPLUS ON)

    find_package(PythonLibs)
    if(PYTHONLIBS_FOUND)
        include_directories(${PYTHON_INCLUDE_PATH})
        set(CMAKE_SWIG_OUTDIR ${CMAKE_CURRENT_BINARY_DIR}/python)
        if (${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.8.0)
            SWIG_ADD_LIBRARY(libsumo LANGUAGE python SOURCES libsumo.i)
        else()
            SWIG_ADD_MODULE(libsumo python libsumo.i)
        endif()
        if (MSVC)
            # disable python module for the debug build because virtually no one has a python debug dll to link against
            set_property(TARGET _libsumo PROPERTY EXCLUDE_FROM_DEFAULT_BUILD_DEBUG TRUE)
            swig_link_libraries(libsumo ${sumolibs} ${PYTHON_LIBRARIES})
        else()
            swig_link_libraries(libsumo -Wl,--whole-archive ${sumolibs} -Wl,--no-whole-archive ${PYTHON_LIBRARIES})
        endif()
        # copy the extra .py files generated by SWIG
        add_custom_target(copy_python ALL DEPENDS ${swig_extra_generated_files})
		add_dependencies(copy_python _libsumo)
        add_custom_command(TARGET copy_python
            POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E copy_if_different ${swig_extra_generated_files} ${CMAKE_SOURCE_DIR}/bin
            DEPENDS $<TARGET_FILE:_libsumo>)
        execute_process(COMMAND ${PYTHON_EXE} -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())" OUTPUT_VARIABLE PYTHON_SITE_PACKAGES_DEFAULT OUTPUT_STRIP_TRAILING_WHITESPACE)
		set(PYTHON_SITE_PACKAGES ${PYTHON_SITE_PACKAGES_DEFAULT} CACHE STRING "Python Site Packages")
        install(TARGETS ${SWIG_MODULE_libsumo_REAL_NAME} DESTINATION ${PYTHON_SITE_PACKAGES})
        install(FILES ${CMAKE_CURRENT_BINARY_DIR}/python/libsumo.py DESTINATION ${PYTHON_SITE_PACKAGES})
		message(STATUS "PYTHON_SITE_PACKAGES: ${PYTHON_SITE_PACKAGES}")
    endif()

    find_package(Java)
    find_package(JNI)
    if(JAVA_FOUND AND JNI_FOUND)
        include(UseJava)
        include_directories(${JNI_INCLUDE_DIRS})
        set(CMAKE_SWIG_FLAGS -package de.dlr.ts.routingkernel.sumowrapper)
        set(CMAKE_SWIG_OUTDIR ${CMAKE_CURRENT_BINARY_DIR}/java)
        if (${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.8.0)
            SWIG_ADD_LIBRARY(libsumo LANGUAGE java SOURCES libsumo.i)
        else()
            SWIG_ADD_MODULE(libsumo java libsumo.i)
        endif()
        if (MSVC)
            swig_link_libraries(libsumo ${sumolibs})
        else()
            set_source_files_properties(${swig_generated_file_fullname} PROPERTIES COMPILE_FLAGS "-Wno-strict-aliasing")
            swig_link_libraries(libsumo -Wl,--whole-archive ${sumolibs} -Wl,--no-whole-archive)
        endif()
#        add_jar(libsumojni ${swig_extra_generated_files})
    endif()
endif()

set(libsumostatic_STAT_SRCS
        Helper.cpp
        Helper.h
        InductionLoop.cpp
        InductionLoop.h
        Junction.cpp
        Junction.h
        Lane.cpp
        Lane.h
        LaneArea.cpp
        LaneArea.h
        MultiEntryExit.h
        MultiEntryExit.cpp
        Person.cpp
        Person.h
        POI.cpp
        POI.h
        Polygon.h
        Polygon.cpp
        Route.h
        Route.cpp
        Simulation.cpp
        Simulation.h
        Subscription.h
        TraCIDefs.h
        TrafficLight.cpp
        TrafficLight.h
        Vehicle.h
        Vehicle.cpp
        VehicleType.cpp
        VehicleType.h
        Edge.cpp Edge.h)

add_library(libsumostatic STATIC ${libsumostatic_STAT_SRCS})
set_property(TARGET libsumostatic PROPERTY PROJECT_LABEL "z_libsumostatic")
